
import React from 'react';
import Grid from '@mui/material/Grid';
import Button from '@mui/material/Button';
import Typography from '@mui/material/Typography';
import { Link } from 'gatsby';
import makeStyles from '@mui/styles/makeStyles';
import { Divider } from "@mui/material";
import { isBrowser } from '../../../components/common/constants';
import EmptyBasket from '../../../components/EmptyBasket';
import { connect } from 'react-redux';

const useStyles = makeStyles((theme) => ({
    table: {
        minWidth: 650,
    },
    button: {
        marginTop: `10px`,
        marginRight: `8px`
    }
}));

function createData(name, count, price) {
    return { name, count, price};
}

const OrderProcessed = ({ location: { state }, adressDelivery, isOpenDelivery }) => {
    const [data, setData] = React.useState([]);
    const [delivery, setDelivery] = React.useState("");
    const [phone, setPhone] = React.useState("");
    const [priceTotal, setPriceTotal] = React.useState("");

    const classes = useStyles();

    React.useEffect(() => {
        if(state === null) {
            return
        }
        if(isBrowser) {
            setData(state.products.map(el => {
                return createData(el.product, el.count, el.total)
            }));
            setPriceTotal(state.totalPrice);
            setPhone(state.phone);
            setDelivery(state.delivery)
            // setTimeout(() => {
            //     setIsLoading(false)
            // }, 1000)
        }
    }, []);

    return (
        <Grid container style={{marginTop: `25px`}}>
            { state !== null ? <>
            {/* { state !== null && !isLoading ? <> */}
                <Grid item xs={12}>
                    <Typography style={{textAlign: `center`,}} variant={'h4'}><span role="img" aria-label="accessible-emoji" >üéâ</span>–í–∞—à –∑–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω
                    <span role="img" aria-label="accessible-emoji">üéâ</span>
                    </Typography>
                    <Typography variant={"h6"} style={{textAlign: `center`, padding: 7, fontSize: 13}}>–∑–∞–∫–∞–∑ –æ—Ñ–æ—Ä–º–ª–µ–Ω –∏ –ø—Ä–∏–Ω—è—Ç –≤ –æ–±—Ä–∞–±–æ—Ç–∫—É</Typography>
                </Grid>
                <Grid item xs={11} sm={10} style={{margin: `15px auto 50px auto`}}>
                    <Grid item xs={12}>
                        <Typography variant={'h5'}>–î–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞:</Typography>
                    </Grid>
                    <Divider/>
                    <Grid item xs={12} style={{background: `lightgrey`}}>
                        <Typography style={{textAlign: `left`, paddingLeft: 20}} variant={"body1"}>–í–∞—à —Ç–µ–ª–µ—Ñ–æ–Ω: <strong>{phone}</strong></Typography>
                    </Grid>
                    <Grid item xs={12} style={{borderRadius: 10, border: `1px lightgrey solid`, margin: `10px auto`}}>
                        {data && data.map((row) => (
                          <div key={row.name} style={{marginTop: 8 }}>
                              <Typography style={{textAlign: `left`, paddingLeft: 20}} variant={"body1"}><strong>–ë–ª—é–¥–æ: </strong>
                                  {row.name}</Typography>
                              <Typography style={{textAlign: `left`, paddingLeft: 20}} variant={"body1"}><strong>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: </strong>
                                  {row.count} —à—Ç</Typography>
                              <Typography style={{textAlign: `left`, paddingLeft: 20}} variant={"body1"}><strong>–¶–µ–Ω–∞: </strong>
                                  {row.price} —Ä—É–±</Typography>
                              <Divider/>
                          </div>
                        ))}
                    </Grid>
                    <Grid item xs={12}>
                        <Typography variant={"body1"}>–û–±—â–∞—è —Ü–µ–Ω–∞ –∫ –æ–ø–ª–∞—Ç–µ <strong>{priceTotal} —Ä—É–±</strong></Typography>
                    </Grid>
                    <Divider/>
                    <Grid item xs={12}>
                        <div style={{background: `lightgrey`}}>
                        {delivery === "–°–∞–º–æ–≤—ã–≤–æ–∑" && (
                          <Typography variant={"body1"}>–í—Ä–µ–º—è –≥–æ—Ç–æ–≤–∫–∏ –∑–∞–∫–∞–∑–∞: <strong>25 - 45
                              –º–∏–Ω</strong></Typography>
                        )}
                        { delivery !== "–°–∞–º–æ–≤—ã–≤–æ–∑" && <>
                            <Typography style={{ paddingRight: 10, marginBottom: '5px'}} variant={'subtitle2'}>–í—Ä–µ–º—è –¥–æ—Å—Ç–∞–≤–∫–∏
                                –∑–∞–∫–∞–∑–∞ –æ—Ç <strong> 1—á - 1—á 30 –º–∏–Ω</strong></Typography>
                            <Typography style={{ paddingRight: 10, marginBottom: '6px'}} variant={"subtitle2"}>–í —á–∞—Å—ã –ø–∏–∫, –∏ –ø—Ä–∞–∑–¥–Ω–∏—á–Ω—ã–µ –¥–Ω–∏ –≤—Ä–µ–º—è –¥–æ—Å—Ç–∞–≤–∫–∏ –º–æ–∂–µ—Ç —É–≤–µ–ª–∏—á–∏—Ç—å—Å—è<strong> –Ω–∞ 30 –º–∏–Ω—É—Ç</strong></Typography>
                            <Typography style={{ paddingRight: 10, marginTop: 5}} variant={"caption"}> * –æ—Ñ–æ—Ä–º–ª—è–π—Ç–µ –∑–∞–∫–∞–∑—ã –∑–∞—Ä–∞–Ω–µ–µ –∫ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–º—É –≤—Ä–µ–º–µ–Ω–∏ </Typography>

                        </>}
                        </div>
                        {/* <div style={{padding: `8px 0`}}>
                            <Typography variant='subtitle2' style={{textAlign: `left`}}>–ó–∞–∫–∞–∑ –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—ã–π –∫–æ –≤—Ä–µ–º–µ–Ω–∏ –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤/–¥–æ—Å—Ç–∞–≤–ª–µ–Ω –∫ —É–∫–∞–∑–∞–Ω–Ω–æ–º—É –≤—Ä–µ–º–µ–Ω–∏.</Typography>
                        </div> */}

                        <div style={{padding: `8px 0` }}>
                            <Typography variant='subtitle2' style={{textAlign: `left`}}>–û–ø–µ—Ä–∞—Ç–æ—Ä —Å –≤–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞.</Typography>
                        </div>
                        <div style={{padding: `8px 0`}}>
                            <Typography style={{textAlign: `left`}} variant='subtitle2'>
                                {adressDelivery === "–í–∞–ª—É–π–∫–∏" ? "–≥.–í–∞–ª—É–π–∫–∏, —É–ª.–¢–æ–ª—Å—Ç–æ–≥–æ 16/2. –ì—Ä–∞—Ñ–∏–∫ —Ä–∞–±–æ—Ç—ã —Å 11:00 –¥–æ 22:00 –±–µ–∑ –ø–µ—Ä–µ—Ä—ã–≤–æ–≤ –∏ –≤—ã—Ö–æ–¥–Ω—ã—Ö." : "–ø.–£—Ä–∞–∑–æ–≤–æ, —É–ª.–ö—Ä–∞—Å–Ω–∞—è –ü–ª–æ—â–∞–¥—å 30–ê. –ì—Ä–∞—Ñ–∏–∫ —Ä–∞–±–æ—Ç—ã —Å 10:00 –¥–æ 22:00 –±–µ–∑ –ø–µ—Ä–µ—Ä—ã–≤–æ–≤ –∏ –≤—ã—Ö–æ–¥–Ω—ã—Ö."}</Typography>
                        </div>

                    </Grid>
                    <Divider/>
                    <Grid item xs={12}>
                        <Typography style={{textAlign: `left`, padding: `8px 0`}} 
                        variant={"body2"}>–°–ø–∞—Å–∏–±–æ —á—Ç–æ –≤—ã–±–∏—Ä–∞–µ—Ç–µ –°–≤–∏—Å–Ω–∏ –°—É—à–∏!</Typography>
                    </Grid>
                    <Grid item xs={12}>
                        <Button component={Link}
                                to="/"
                                variant="contained"
                                color="success"
                                size={'small'}
                                style={{background: 'white', color: '#00000', marginRight: '5px'}}
                                className={classes.button}>
                            –ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ –≥–ª–∞–≤–Ω—É—é
                        </Button>
                        <Button component={"a"}
                                href={adressDelivery === "–í–∞–ª—É–π–∫–∏" ? "tel:+79524225422" : "tel:+79040949222"}
                                variant={"contained"}
                                size={'small'}
                                style={{background: 'white', color: '#00000'}}
                                className={classes.button}
                                // color={"secondary"}
                                >
                            –ü–æ–∑–≤–æ–Ω–∏—Ç—å
                        </Button>
                    </Grid>
                </Grid>
            </> : <EmptyBasket />
            }
        </Grid>
    )
}

const mapStateToProps = (state) => ({
    adressDelivery: state.app.userSettings?.adressDelivery,
    isOpenDelivery: state.app.userSettings?.isOpenDelivery,
  });

export default connect(mapStateToProps, null)(OrderProcessed)

